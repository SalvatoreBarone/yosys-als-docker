/* Generated by Yosys 0.9 (git sha1 1979e0b1, gcc 8.3.0-6 -fPIC -Os) */

(* src = "cmlexamples/cc_orig.v:2" *)
(* top =  1  *)
module cc(a, b, c, d, e, f, g, h, i, j, k, l, m, o, p, q, r, s, t, u, v, w, x, y, z, a0, b0, c0, d0, e0, f0, g0, h0, i0, j0, k0, l0, m0, n0, o0, p0);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  (* src = "cmlexamples/cc_orig.v:46" *)
  wire \[0] ;
  (* src = "cmlexamples/cc_orig.v:46" *)
  wire \[10] ;
  (* src = "cmlexamples/cc_orig.v:46" *)
  wire \[12] ;
  (* src = "cmlexamples/cc_orig.v:46" *)
  wire \[13] ;
  (* src = "cmlexamples/cc_orig.v:46" *)
  wire \[14] ;
  (* src = "cmlexamples/cc_orig.v:46" *)
  wire \[15] ;
  (* src = "cmlexamples/cc_orig.v:46" *)
  wire \[16] ;
  (* src = "cmlexamples/cc_orig.v:46" *)
  wire \[17] ;
  (* src = "cmlexamples/cc_orig.v:46" *)
  wire \[18] ;
  (* src = "cmlexamples/cc_orig.v:46" *)
  wire \[19] ;
  (* src = "cmlexamples/cc_orig.v:46" *)
  wire \[1] ;
  (* src = "cmlexamples/cc_orig.v:46" *)
  wire \[2] ;
  (* src = "cmlexamples/cc_orig.v:46" *)
  wire \[3] ;
  (* src = "cmlexamples/cc_orig.v:46" *)
  wire \[4] ;
  (* src = "cmlexamples/cc_orig.v:46" *)
  wire \[9] ;
  (* src = "cmlexamples/cc_orig.v:3" *)
  input a;
  (* src = "cmlexamples/cc_orig.v:25" *)
  output a0;
  (* src = "cmlexamples/cc_orig.v:3" *)
  input b;
  (* src = "cmlexamples/cc_orig.v:25" *)
  output b0;
  (* src = "cmlexamples/cc_orig.v:3" *)
  input c;
  (* src = "cmlexamples/cc_orig.v:25" *)
  output c0;
  (* src = "cmlexamples/cc_orig.v:3" *)
  input d;
  (* src = "cmlexamples/cc_orig.v:25" *)
  output d0;
  (* src = "cmlexamples/cc_orig.v:3" *)
  input e;
  (* src = "cmlexamples/cc_orig.v:25" *)
  output e0;
  (* src = "cmlexamples/cc_orig.v:3" *)
  input f;
  (* src = "cmlexamples/cc_orig.v:25" *)
  output f0;
  (* src = "cmlexamples/cc_orig.v:3" *)
  input g;
  (* src = "cmlexamples/cc_orig.v:25" *)
  output g0;
  (* src = "cmlexamples/cc_orig.v:3" *)
  input h;
  (* src = "cmlexamples/cc_orig.v:25" *)
  output h0;
  (* src = "cmlexamples/cc_orig.v:3" *)
  input i;
  (* src = "cmlexamples/cc_orig.v:25" *)
  output i0;
  (* src = "cmlexamples/cc_orig.v:3" *)
  input j;
  (* src = "cmlexamples/cc_orig.v:25" *)
  output j0;
  (* src = "cmlexamples/cc_orig.v:3" *)
  input k;
  (* src = "cmlexamples/cc_orig.v:25" *)
  output k0;
  (* src = "cmlexamples/cc_orig.v:3" *)
  input l;
  (* src = "cmlexamples/cc_orig.v:25" *)
  output l0;
  (* src = "cmlexamples/cc_orig.v:3" *)
  input m;
  (* src = "cmlexamples/cc_orig.v:25" *)
  output m0;
  (* src = "cmlexamples/cc_orig.v:25" *)
  output n0;
  (* src = "cmlexamples/cc_orig.v:3" *)
  input o;
  (* src = "cmlexamples/cc_orig.v:25" *)
  output o0;
  (* src = "cmlexamples/cc_orig.v:3" *)
  input p;
  (* src = "cmlexamples/cc_orig.v:25" *)
  output p0;
  (* src = "cmlexamples/cc_orig.v:3" *)
  input q;
  (* src = "cmlexamples/cc_orig.v:3" *)
  input r;
  (* src = "cmlexamples/cc_orig.v:3" *)
  input s;
  (* src = "cmlexamples/cc_orig.v:3" *)
  input t;
  (* src = "cmlexamples/cc_orig.v:3" *)
  input u;
  (* src = "cmlexamples/cc_orig.v:3" *)
  input v;
  (* src = "cmlexamples/cc_orig.v:25" *)
  output w;
  (* src = "cmlexamples/cc_orig.v:25" *)
  output x;
  (* src = "cmlexamples/cc_orig.v:25" *)
  output y;
  (* src = "cmlexamples/cc_orig.v:25" *)
  output z;
  assign f0 = i & j;
  assign _097_ = _013_ & _049_;
  assign _051_ = _014_ & _050_;
  assign j0 = m & _051_;
  assign _052_ = k & b;
  assign _053_ = i & _052_;
  assign _000_ = _015_ & _053_;
  assign _054_ = q & k;
  assign _001_ = i & _054_;
  assign _055_ = k & i;
  assign _098_ = _016_ & _055_;
  assign k0 = _002_ & _056_;
  assign _099_ = k & i;
  assign _100_ = _017_ & _057_;
  assign _002_ = m & _058_;
  assign _003_ = _018_ & c;
  assign _101_ = _019_ & _059_;
  assign _061_ = _020_ & _060_;
  assign l0 = m & _061_;
  assign _022_ = _021_ & _062_;
  assign _063_ = i & k;
  assign _004_ = _022_ & _063_;
  assign _005_ = _023_ & r;
  assign _064_ = k & i;
  assign _006_ = _024_ & _064_;
  assign _102_ = _025_ & _065_;
  assign _067_ = _026_ & _066_;
  assign m0 = m & _067_;
  assign _028_ = _027_ & _068_;
  assign _069_ = i & k;
  assign _007_ = _028_ & _069_;
  assign _103_ = _029_ & _070_;
  assign _072_ = _030_ & _071_;
  assign o0 = m & _072_;
  assign _032_ = _031_ & _073_;
  assign _074_ = i & k;
  assign _008_ = _032_ & _074_;
  assign _104_ = _033_ & _075_;
  assign _077_ = _034_ & _076_;
  assign n0 = m & _077_;
  assign _036_ = _035_ & _078_;
  assign _079_ = k & i;
  assign _009_ = _036_ & _079_;
  assign _105_ = _037_ & _080_;
  assign _082_ = _038_ & _081_;
  assign p0 = m & _082_;
  assign _040_ = _039_ & _083_;
  assign _084_ = i & k;
  assign _010_ = _040_ & _084_;
  assign _085_ = q & i;
  assign _086_ = k & _085_;
  assign x = _041_ & _086_;
  assign w = v & l;
  assign _106_ = _042_ & _087_;
  assign _089_ = _043_ & _088_;
  assign y = m & _089_;
  assign z = _011_ & q;
  assign _090_ = m & i;
  assign _091_ = k & _090_;
  assign _011_ = _044_ & _091_;
  assign _107_ = _045_ & _092_;
  assign _094_ = _046_ & _093_;
  assign i0 = m & _094_;
  assign _048_ = _047_ & _095_;
  assign _096_ = k & i;
  assign _012_ = _048_ & _096_;
  assign _013_ = ~p;
  assign _049_ = ~_001_;
  assign _014_ = ~_000_;
  assign _050_ = ~_097_;
  assign _015_ = ~q;
  assign _016_ = ~_003_;
  assign _056_ = ~_098_;
  assign _017_ = ~q;
  assign _057_ = ~_099_;
  assign _058_ = ~_100_;
  assign _018_ = ~q;
  assign _019_ = ~_006_;
  assign _059_ = ~_005_;
  assign _020_ = ~_004_;
  assign _060_ = ~_101_;
  assign _021_ = ~q;
  assign _062_ = ~d;
  assign _023_ = ~p;
  assign _024_ = ~q;
  assign _025_ = ~s;
  assign _065_ = ~_006_;
  assign _026_ = ~_007_;
  assign _066_ = ~_102_;
  assign _027_ = ~q;
  assign _068_ = ~e;
  assign _029_ = ~u;
  assign _070_ = ~_006_;
  assign _030_ = ~_008_;
  assign _071_ = ~_103_;
  assign _031_ = ~q;
  assign _073_ = ~g;
  assign _033_ = ~t;
  assign _075_ = ~_006_;
  assign _034_ = ~_009_;
  assign _076_ = ~_104_;
  assign _035_ = ~q;
  assign _078_ = ~f;
  assign _037_ = ~v;
  assign _080_ = ~_006_;
  assign _038_ = ~_010_;
  assign _081_ = ~_105_;
  assign _039_ = ~q;
  assign _083_ = ~h;
  assign _041_ = ~p;
  assign _042_ = ~p;
  assign _087_ = ~_006_;
  assign _043_ = ~l;
  assign _088_ = ~_106_;
  assign _044_ = ~p;
  assign _045_ = ~o;
  assign _092_ = ~_006_;
  assign _046_ = ~_012_;
  assign _093_ = ~_107_;
  assign _047_ = ~a;
  assign _095_ = ~q;
  assign a0 = ~t;
  assign g0 = ~f0;
  assign \[0]  = w;
  assign \[10]  = g0;
  assign \[12]  = i0;
  assign \[13]  = j0;
  assign \[14]  = k0;
  assign \[15]  = l0;
  assign \[16]  = m0;
  assign \[17]  = n0;
  assign \[18]  = o0;
  assign \[19]  = p0;
  assign \[1]  = x;
  assign \[2]  = y;
  assign \[3]  = z;
  assign \[4]  = a0;
  assign \[9]  = f0;
  assign b0 = u;
  assign c0 = q;
  assign d0 = s;
  assign e0 = r;
  assign h0 = p;
endmodule
